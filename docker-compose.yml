services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: repl-ay-db
    environment:
      POSTGRES_DB: replay_db
      POSTGRES_USER: replay_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-replay_secure_password_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - repl-ay-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U replay_user -d replay_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: ./repl-ay-app
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: repl-ay-app
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://replay_user:${DB_PASSWORD:-replay_secure_password_2024}@postgres:5432/replay_db
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: replay_db
      DB_USER: replay_user
      DB_PASSWORD: ${DB_PASSWORD:-replay_secure_password_2024}
      
      # Next.js Configuration
      NODE_ENV: production
      NEXT_PUBLIC_APP_URL: https://localhost:3000
      NEXTAUTH_URL: https://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-super-secret-nextauth-secret-here}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-for-repl-ay-development}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      
      # Google OAuth
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${NEXT_PUBLIC_GOOGLE_CLIENT_ID}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}
      
      # Stripe Configuration
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      STRIPE_BASE_URL: ${STRIPE_BASE_URL:-https://api.stripe.com}
      
      # Email/Marketing
      MAILERLITE_API_KEY: ${MAILERLITE_API_KEY}
      
      # AI Provider API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      XAI_API_KEY: ${XAI_API_KEY}
      QWEN_API_KEY: ${QWEN_API_KEY}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      COHERE_API_KEY: ${COHERE_API_KEY}
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN}
      
      # Local Model Settings
      OLLAMA_BASE_URL: http://host.docker.internal:11434
      
      # SSL/HTTPS Configuration
      HTTPS_KEY_PATH: /app/certs/localhost+2-key.pem
      HTTPS_CERT_PATH: /app/certs/localhost+2.pem
      ENABLE_HTTPS: "true"
      PORT: 3000
    volumes:
      # Mount SSL certificates
      - ./repl-ay-app/certs:/app/certs:ro
      # Mount uploads directory (if needed)
      - app_uploads:/app/uploads
    ports:
      - "3000:3000"   # HTTPS port
    networks:
      - repl-ay-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f -k https://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for Session Storage (optional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: repl-ay-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password_2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - repl-ay-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Reverse Proxy (optional, for production)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: repl-ay-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./repl-ay-app/certs:/etc/nginx/certs:ro
    networks:
      - repl-ay-network
    depends_on:
      - app
    profiles:
      - production

networks:
  repl-ay-network:
    driver: bridge
    name: repl-ay-network

volumes:
  postgres_data:
    name: repl-ay-postgres-data
  redis_data:
    name: repl-ay-redis-data
  app_uploads:
    name: repl-ay-app-uploads